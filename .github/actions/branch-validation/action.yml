name: 'Branch Validation'
description: 'Validates that the branch meets deployment requirements'

inputs:
  branch:
    description: 'Branch to validate'
    required: true
  environment:
    description: 'Target environment'
    required: true

outputs:
  is_valid:
    description: 'Whether the branch validation passed'
    value: ${{ steps.validate.outputs.is_valid }}
  message:
    description: 'Validation message'
    value: ${{ steps.validate.outputs.message }}

runs:
  using: 'composite'
  steps:
    - name: Validate Branch
      id: validate
      shell: bash
      run: |
        echo "üîç Running Branch Validation..."
        echo "Branch: ${{ inputs.branch }}"
        echo "Environment: ${{ inputs.environment }}"
        
        # TODO: Implement your branch validation logic here
        # Examples:
        # - Verify branch naming convention
        # - Check if branch is protected
        # - Validate branch is up-to-date with base branch
        # - Check if branch has required approvals
        # - Verify CI/CD checks passed on this branch
        
        is_valid="true"
        message="Branch validation passed"
        
        # Example validation rules:
        branch="${{ inputs.branch }}"
        environment="${{ inputs.environment }}"
        
        # DEV-INT is auto-deployed from main, manual deploys also allowed from main
        if [[ "${environment}" == "dev-int" ]]; then
          if [[ ! "${branch}" =~ ^(main)$ ]]; then
            is_valid="false"
            message="DEV-INT deployments must come from main branch"
          fi
        fi
        
        # FUTURE and ACTIVE can deploy from main or release branches
        if [[ "${environment}" == "future" || "${environment}" == "active" ]]; then
          if [[ ! "${branch}" =~ ^(main|release/.*)$ ]]; then
            is_valid="false"
            message="Future/Active deployments must come from main or release/* branches"
          fi
        fi
        
        # UAT can deploy from main or release branches
        if [[ "${environment}" == "uat" ]]; then
          if [[ ! "${branch}" =~ ^(main|release/.*)$ ]]; then
            is_valid="false"
            message="UAT deployments must come from main or release/* branches"
          fi
        fi
        
        # Staging should deploy from main or release branches
        if [[ "${environment}" == "staging" ]]; then
          if [[ ! "${branch}" =~ ^(main|release/.*)$ ]]; then
            is_valid="false"
            message="Staging deployments must come from main or release/* branches"
          fi
        fi
        
        # Production deployments should only come from specific branches
        if [[ "${environment}" == "prod" ]]; then
          if [[ ! "${branch}" =~ ^(main|release/.*)$ ]]; then
            is_valid="false"
            message="Production deployments must come from main or release/* branches"
          fi
        fi
        
        echo "is_valid=${is_valid}" >> $GITHUB_OUTPUT
        echo "message=${message}" >> $GITHUB_OUTPUT
        
        if [[ "${is_valid}" == "true" ]]; then
          echo "‚úÖ Branch validation passed"
        else
          echo "‚ùå Branch validation failed: ${message}"
          exit 1
        fi

